### Note that depending on the file format selected, the parameters in the data section can vary
### You should refer to the documentation to know what are the needed parameters for a given
### file format. Otherwise, launch the code and a message will tell you what is needed

[data]
file_format    =                       # Can be raw_binary, openephys, hdf5, ... See >> spyking-circus help -i for more info
stream_mode    = None                  # None by default. Can be multi-files, or anything depending to the file format
mapping        = ~/probes/mea_252.prb  # Mapping of the electrode (see http://spyking-circus.rtfd.ord)
suffix         =                       # Suffix to add to generated files
global_tmp     = True                  # should be False if local /tmp/ has enough space (better for clusters)
overwrite      = True                  # Filter or remove artefacts on site (if write access is possible). Data are duplicated otherwise

[detection]
radius         = auto       # Radius [in um] (if auto, read from the prb file)
N_t            = 5          # Width of the templates [in ms]
spike_thresh   = 6          # Threshold for spike detection
peaks          = negative   # Can be negative (default), positive or both
matched-filter = False      # If True, we perform spike detection with matched filters
matched_thresh = 5          # Threshold for detection if matched filter is True
alignment      = True       # Realign the waveforms by oversampling

[filtering]
cut_off        = 500, auto  # Min and Max (auto=nyquist) cut off frequencies for the band pass butterworth filter [Hz]
filter         = True       # If True, then a low-pass filtering is performed
remove_median  = False      # If True, median over all channels is substracted to each channels (movement artifacts)

[whitening]
chunk_size     = 30         # Size of the data chunks [in s]
safety_time    = 1          # Temporal zone around which templates are isolated [in ms, or auto]
temporal       = False      # Perform temporal whitening
spatial        = True       # Perform spatial whitening
max_elts       = 10000      # Max number of events per electrode (should be compatible with nb_elts)
nb_elts        = 0.8        # Fraction of max_elts that should be obtained per electrode [0-1]
output_dim     = 5          # Can be in percent of variance explain, or num of dimensions for PCA on waveforms

[clustering]
extraction     = median-raw # Can be either median-raw (default), median-pca, mean-pca, mean-raw
safety_space   = True       # If True, we exclude spikes in the vicinity of a selected spikes
safety_time    = auto       # Temporal zone around which templates are isolated [in ms, or auto]
max_elts       = 10000      # Max number of events per electrode (should be compatible with nb_elts)
nb_elts        = 0.8        # Fraction of max_elts that should be obtained per electrode [0-1]
nclus_min      = 0.005      # Min number of elements in a cluster (given in percentage) [0-1]
max_clusters   = 10         # Maximal number of clusters for every electrodes
nb_repeats     = 3          # Number of passes used for the clustering
smart_search   = True       # Parameter to activate the smart search mode
sim_same_elec  = 3          # Distance within clusters under which they are re-merged
cc_merge       = 0.975      # If CC between two templates is higher, they are merged
dispersion     = (5, 5)     # Min and Max dispersion allowed for amplitudes [in MAD]
noise_thr      = 0.8        # Minimal amplitudes are such than amp*min(templates) < noise_thr*threshold in [0-1]
remove_mixture = True       # At the end of the clustering, we remove mixtures of templates
make_plots     =            # Generate sanity plots of the clustering [Nothing or None if no plots]

[fitting]
chunk_size     = 1          # Size of chunks used during fitting [in second]
gpu_only       = False      # Use GPU for computation of b's AND fitting [not optimized yet]
amp_limits     = (0.3, 5)   # Amplitudes for the templates during spike detection [if not auto]
amp_auto       = True       # True if amplitudes are adjusted automatically for every templates
max_chunk      = inf        # Fit only up to max_chunk   
collect_all    = False      # If True, one garbage template per electrode is created, to store unfitted spikes
